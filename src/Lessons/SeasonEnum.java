package Lessons;

public enum SeasonEnum { //создали енам и перечисляем в нем все необходимые объекты типа SeasonsEnum,
    // к будем использовать в нашей программе в мейн методе.
    SUMMER("лето",30), WINTER("зима",-20), AUTUMN("осень",10),SPRING("весна",15);
    String translation;
    int temperature;
    // Как можно использовать то, что все перечисленные объекты являются объектами своего типа?
    // мы можем создать конструктор в нашем енаме
    SeasonEnum (String translation, int temp){ // теперь у класса(енама) SeasonEnam появился конструктор, и мы всем объектам можем присвоить поля
        this.translation = translation;
        temperature = temp;
        // полю String translation мы передаем значение, которое пришло в аргументе конструктора.
        // как только полю объектов класса SeasonEnum мы присвоили значение, все объекты подчеркнулись красным,
        // т.к. при создании конструктора, конструктор по умолчанию SeasonEnum() перестает работать, т.к. по умолчанию он не принимает в себя аргументов () - пустой, и в своем теле ничего не назначает.
        //присваиваем нашим объектам аргумент String translation и ошибка исчезает
        //теперь у каждого объекта мы можем узнать поле с помощью метода getTranslation():
    }
    public String getTranslation(){
        return translation;         // теперь в нашей программе TestEnum мы можем вызвать метод
        //getTranslation и узнать перевод каждого объекта
    }
    public int getTemperature(){
        return temperature;
    }
}
